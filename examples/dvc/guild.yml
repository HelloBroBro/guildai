# - model: ''
#   extra:
#     dvc-stages-import: hello
#   operations:
#     hello-dvc-stage:
#       main: guild.plugins.dvc_stage_main hello --project-dir ${project_dir}
#       description: DvC hello stage
#     hello-dvc-pipeline:
#       main: guild.plugins.dvc_stage_main hello --pipeline
#       description: DvC hello pipeline
#     hello-guild-op:
#       main: hello
#       description: Guild hello operation
#       requires:
#         - file: hello.in
#           pre-process: dvc pull hello.in
#     hello-guild-pipeline:
#       description: Sample Guild pipeline (contrast to DvC hello pipeline)
#       steps:
#         - hello-op
#         - hello-op
#         - hello-op

# - model: iris
#   extra:
#     dvc-stages-import:
#       - prepare-data
#       - train-models
#       - eval-models
#   operations:
#     prepare-data:
#       description: Prepare Iris data for model training
#     train-models:
#       description: Train Iris models
#     eval-models:
#       description: Evaluate trained Iris models

# - model: all-dvc
#   extra:
#     dvc-stages-import: all

# hello:
#   main: guild.plugins.dvc_stage_main hello
#   sourcecode: no

- model: ''
  extra:
    dvc-stages-import:
      #- hello
      #- prepare-data
      #- train-models
      #- eval-models


  operations:
    hello-guild-dep:
      description: Standard Guild dependency example without DvC support
      main: hello
      requires:
        - file: hello.in
          help: Missing hello.in - run 'dvc pull hello.in' to fetch it

    hello-dvc-dep:
      description: Uses DvC dependency to fetch required file if needed
      main: hello
      requires:
        - dvc: hello.in

    hello-dvc-dep-always-pull:
      description: Uses DvC dependency to always fetch required file
      main: hello
      requires:
        - dvc: hello.in
          always-pull: yes

    hello-dvc-stage:
      description: Uses Guild DvC plugin to run hello stage
      main: guild.plugins.dvc_stage_main hello

    prepare-data-dvc-stage:
      description: Use Guild DvC plugin to run prepare-data stage
      main: guild.plugins.dvc_stage_main prepare-data

    train-models-dvc-stage:
      description: Use Guild DvC plugin to run train-models stage
      main: guild.plugins.dvc_stage_main train-models


    train-models-guild-op:
      description: Use Guild to run the train models operation
      main: train_models
      flags-dest: config:params.json.in
      flags-import: all
      requires:
        - config: params.json.in
          rename: params.json.in params.json
        - operation: prepare-data-.*
          name: prepare-data
          select:
            - iris.npy

    eval-models-dvc-stage:
      description: Use Guild DvC plugin to run eval-models stage
      main: guild.plugins.dvc_stage_main eval-models

    # prepare-data:
    #   main: guild.plugins.dvc_stage_main prepare-data
    #   requires:
    #     file: iris.csv.dvc
    #   sourcecode:
    #     select: []
    #     dest: .
    # train-models:
    #   main: guild.plugins.dvc_stage_main train-models
    #   requires:
    #     - operation: prepare-data
    #       select:
    #         - iris.npy
    #   sourcecode:
    #     select: []
    #     dest: .
    # eval-models:
    #   main: guild.plugins.dvc_stage_main eval-models
    #   requires:
    #     - operation: prepare-data
    #       select:
    #         - iris.npy
    #     - operation: train-models
    #       select:
    #         - model-.*\.joblib
    #   sourcecode:
    #     select: []
    #     dest: .
