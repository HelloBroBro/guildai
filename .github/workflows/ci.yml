# This workflow will install Python dependencies, run tests and lint
# with a variety of Python versions For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build, test and package

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  workflow_dispatch:
    inputs:
      run_with_ssh:
        type: boolean
        description: Run with SSH
        required: false
        default: false

concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true

env:
  NON_INTERACTIVE_CI: true
  TERM: xterm-256color
  WORKSPACE: test-env
  UAT_SKIP: remote-*,hiplot-*
  COLUMNS: 999
  EXAMPLES: examples
  GUILD_START_THRESHOLD: 999
  DASK_SPEEDUP_THRESHOLD: 999
  GUILD_SHELL: bash

jobs:
  pre-commit-hooks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout out repository
        uses: actions/checkout@v3
      - name: Run pre-commit hooks
        uses: pre-commit/action@v2.0.3

  build-and-test:
    runs-on: ${{ matrix.sys.os }}
    needs:
      - pre-commit-hooks
    strategy:
      fail-fast: false
      matrix:
        sys:
          - os: ubuntu-latest
            shell: bash
        #   - os: macos-latest
        #     shell: bash
        #   - os: windows-latest
        #     shell: bash
        python-version:
          - "3.6"
          # - "3.7"
          # - "3.8"
          # - "3.9"
          # - "3.10"
          # - "3.11"
    defaults:
      run:
        shell: ${{ matrix.sys.shell }}

    steps:
      - name: Start SSH
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.run_with_ssh }}

      - name: Checkout repository
        uses: actions/checkout@v3

      # - name: Get Git tags
      #   run: git fetch --prune --unshallow --tags -f

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      # - name: Add msys64 to PATH to pick up different bash.exe
      #   # https://github.com/actions/runner/issues/497
      #   # https://github.com/actions/toolkit/blob/main/docs/commands.md#environment-files
      #   if: runner.os == 'Windows'
      #   run: echo "C:\\msys64\\usr\\bin" >> $GITHUB_PATH

      # - name: Setup git user
      #   run: |
      #     git config --global user.name "$(git --no-pager log --format=format:'%an' -n 1)"
      #     git config --global user.email "$(git --no-pager log --format=format:'%ae' -n 1)"
      #     git config --global init.defaultBranch main

      - name: Build package
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python setup.py bdist_wheel

      #    ^^^^ python -m pip install --upgrade dist/*.whl

      # - name: Run UAT tests
      #   env:
      #     GUILD_CHECK_TIMEOUT: ${{ fromJSON('{"Linux":1800,"macOS":3600,"Windows":3600}')[runner.os] }}
      #   run: |
      #     guild init -y --no-progress --name guild-test --guild dist/*.whl ./test-env
      #     source "$(find test-env -iname activate | awk '{ print length, $0 }' | sort -n -s | cut -d" " -f2- | head -n 1)"
      #     guild check --uat --offline
