name: Build

on:
  schedule:
    - cron:  '0 5 * * *'

  workflow_dispatch:
    inputs:
      skip_uat:
        description: Skip user-acceptance tests (built-in tests still run)
        type: boolean
        default: false
      skip_posix:
        description: Skip build for POSIX
        type: boolean
        default: false
      skip_windows:
        description: Skip build for Windows
        type: boolean
        default: false
      release:
        description: Publish to PyPI (select for release)
        type: boolean
        default: false

jobs:
  build-posix:
    name: Build - POSIX
    if: ${{ !inputs.skip_posix }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        python:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Build package
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python setup.py bdist_wheel

      - name: Install package
        run: |
          python -m venv test-env
          test-env/bin/pip install --upgrade pip
          test-env/bin/pip install dist/*.whl

      - name: Install test requirements
        # uat tests install test requirements as a part of the test
        # suite - these must not be installed ahead of time
        if: ${{ inputs.skip_uat }}
        run: |
          test-env/bin/pip install -r guild/tests/requirements.txt

      - name: Configure environment for tests
        # git config required by Guild tests that run git commands
        run: |
          git config --global user.name unused
          git config --global user.email unused@localhost
          git config --global init.defaultBranch main

      - name: Run built-in tests
        if: ${{ inputs.skip_uat }}
        env:
          GUILD_START_THRESHOLD: 1.0
          BREAKPOINT_PROMPT_TIMEOUT: 5.0
          GUILD_CI: 1
          GH_TOKEN: ${{ github.token }}
        run: |
          test-env/bin/guild check -T -c8 --fast

      - name: Run user acceptance tests
        if: ${{ !inputs.skip_uat }}
        env:
          WORKSPACE: /tmp/guild-uat
          EXAMPLES: examples
          GUILD_CI: 1
          UAT_SKIP: remote-*,hiplot-*
          GUILD_START_THRESHOLD: 1.0
          DASK_SPEEDUP_THRESHOLD: 0
          BREAKPOINT_PROMPT_TIMEOUT: 5.0
          GH_TOKEN: ${{ github.token }}
        run: |
          test-env/bin/guild check --force-uat

  build-windows:
    name: Build - Windows
    if: ${{ !inputs.skip_windows }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
        python:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Build package
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python setup.py bdist_wheel

      - name: Install package
        run: |
          python -m venv test-env
          test-env\Scripts\python -m pip install --upgrade pip
          pwsh -Command 'test-env\Scripts\pip install $(ls dist)'

      - name: Install test requirements
        # setuptools==58 is a workaround for an issue described in
        # https://stackoverflow.com/questions/69100275/error-while-downloading-the-requirements-using-pip-install-setup-command-use-2
        # In our case we get 'error in pywin32-ctypes setup command:
        # use_2to3 is invalid' when installing test reqs on some
        # versions of Windows. This can be removed when pywin32-ctypes
        # drops Python 2 support.
        run: |
          test-env\Scripts\pip install setuptools==58
          test-env\Scripts\pip install -r guild\tests\requirements.txt

      - name: Configure environment for tests
        # - git config required by Guild tests that run git commands
        # - test-env\Tmp used as TMPDIR for tests (keeps tmp files on
        #   same volume as project)
        run: |
          git config --global user.name unused
          git config --global user.email unused@localhost
          git config --global init.defaultBranch main
          mkdir \Tmp -Force

      - name: Run built-in tests
        env:
          GUILD_CI: 1
          GUILD_START_THRESHOLD: 1.0
          BREAKPOINT_PROMPT_TIMEOUT: 5.0
          TMPDIR: \Tmp
          GH_TOKEN: ${{ github.token }}
        run: |
          test-env\Scripts\guild check -T
        shell: cmd

  publish-to-pypi:
    name: Publish to PyPI
    if: ${{ inputs.release }}
    needs:
      - build-posix
      - build-windows
    strategy:
      matrix:
        os:
          # Always create dist on Linux
          - ubuntu-latest
        python:
          # Use oldest supported version of Python to create dist
          - '3.7'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python for build
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Build package
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python setup.py bdist_wheel

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
